name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    
    env:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@localhost:5432/postgres
      SECRET_KEY: test-secret-key-for-ci
      GOOGLE_CLIENT_ID: fake-google-client-id-for-testing
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
          
      - name: Install system dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y postgresql-client libpq-dev
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r backend/requirements.txt
          pip install -r requirements-dev.txt
          
      - name: Wait for PostgreSQL
        run: |
          timeout 60s bash -c 'until pg_isready -h localhost -p 5432 -U postgres; do sleep 2; done'
          
      - name: Run tests
        run: |
          python -m pytest backend/tests/ -v --tb=short
        working-directory: .
          
      - name: Run security scan
        run: |
          bandit -r backend/app -ll -f json -o bandit-report.json || true
          bandit -r backend/app -ll
        continue-on-error: false
          
      - name: Check for vulnerabilities
        run: |
          safety check --file backend/requirements.txt --output text
        continue-on-error: false